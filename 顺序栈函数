#include"static.h"

status InitStack(&S){
    S.base=(ElemType *)malloc(sizeof(ELemType)*20);
    if(S.base==NULL)return ERROR;
    S.top=0;
    S.stackSize=20;
    return OK;
}
status ClearStack(&S){
     S.top=0;
   return OK;
}
status StackEmpty(S){
    if(S.top==0)
        return TRUEï¼›
        return FALSE;
        }
status StackLength(S){
    return S.top;
}
status GetTop(S,&e){
    S.base[S.top]=e;
    return OK;
}
status Push(&S,e){
    if(stackSize==top){
        S.base=(ElemType*)realloc(S.base,sizeof(ElemType)*S.stackSize*2);
    }
    if(S.base==NULL)
        return ERROR;
    S.base[S.top]=e;
    S.top++;
    return OK;
}
status Pop(&S,&e){
    e=S.base[S,top-1];
    S.top--;
    return OK;
    }

